version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-docker-cicd-web
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - redis
      - db

  redis:
    image: redis:7-alpine
    container_name: flask-docker-cicd-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    container_name: flask-docker-cicd-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-flask_app}
      - POSTGRES_USER=${POSTGRES_USER:-flask_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-flask_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-flask_user} -d ${POSTGRES_DB:-flask_app}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network



volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
